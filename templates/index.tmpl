<html>
    <head>
      <title>Locate Server {{ .title }}</title>
      <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css">
      <link rel="icon" href="/static/icons8-検索-50.png">
      <link rel="stylesheet" href="static/style.css">
    </head>
    <body>
      <!-- GET method URI-->
      <form name="form1" method="get" action="/search">
        <a href=/ class="fas fa-home" title="Locate Server Home"></a>
        <!-- 検索窓 -->
        <input type="text" name="q" value="{{ .query }}" size="50" list="searched-words" placeholder="検索キーワードを入力">
        <!-- 検索履歴 Frecency リスト -->
        <datalist id="searched-words">
            {{ range .datalist }}
                <option>{{ .Word }}</option>
            {{ end }}
        </datalist>
        <!-- 検索ボタン -->
        <input type="submit" id="submit" value="&#xf002;" class="fas">
        <input type="button" onclick="toggleMenu('hidden-explain')" value="&#xf05a;" class=fas title="Help"> <!--// Help折りたたみ展開ボタン -->
      </form>

      <!-- ここから先を折りたたむ -->
      <div id="hidden-explain" style="display:none;clear:both;">
        <!-- 検索ヘルプ -->
        <small>
          <ul>
            <li>検索ワードを指定して検索を押すかEnterキーを押すと共有フォルダ内のファイルを高速に検索します。</li>
            <li>対象文字列は2文字以上の文字列を指定してください。</li>
            <li>英字 大文字/小文字は無視します。</li>
            <li>全角/半角スペースで区切ると0文字以上の正規表現(.*)に変換して検索されます。(AND検索)</li>
            <li>"(aaa|bbb)"のグループ化表現が使えます。(OR検索)
              <ul>
                <li>例: <strong>golang (pdf|txt)</strong> =&gt; <strong>golang及びpdf</strong>並びに<strong>golang及びtxt</strong>を検索します。</li>
              </ul>
            </li>
            <li>[a-zA-Z0-9]の正規表現が使えます。
              <ul>
                <li>例: <strong>file[xy] txt</strong> =&gt;<strong>filex及びtxt</strong>並びに<strong>filey及びtxt</strong> を検索します。</li>
                <li>例: <strong>file[x-z] txt</strong> =&gt;<strong>filex及びtxt</strong>、<strong>filey及びtxt</strong>並びに<strong>filez及びtxt</strong> を検索します。</li>
                <li>例: <strong>201[6-9]S</strong>  =&gt; <strong>2016S</strong>, <strong>2017S</strong>, <strong>2018S</strong>, <strong>2019S</strong>を検索します。</li>
              </ul>
            </li>
            <li>0文字か1文字の正規表現"?"が使えます。
              <ul>
                <li>例: <strong>jpe?g</strong> =&gt; <strong>jpeg</strong>と <strong>jpg</strong>を検索します。</li>
              </ul>
            </li>
            <li>単語の頭に半角ハイフン"-"をつけるとその単語を含まないファイルを検索します。(NOT検索)
              <ul>
                <li>例: <strong>gobook txt -doc</strong>=&gt;<strong>gobook</strong>と<strong>txt</strong>を含み<strong>doc</strong>を含まないファイルを検索します。</li>
              </ul>
            </li>
            <li>AND検索は順序を守って検索をかけますが、NOT検索は順序は問わずに除外します。
              <ul>
                <li>例: <strong>gobook txt -doc</strong> と<strong>txt gobook -doc</strong> は異なる検索結果ですが、 <strong>gobook txt -doc</strong> と<strong>gobook -doc txt</strong>は同じ検索結果になります。</li>
              </ul>
            </li>
              <li>ファイル拡張子を指定するときは、文字列の最後を表す<strong>$</strong>記号を行末につけます。
                <ul>
                <li>例: <strong>gobook pdf$</strong> =&gt;<strong>gobook</strong>を含み、<strong>pdf</strong>が行末につくファイルを検索します。</li>
                </ul>
              </li>
            </ul>
        </small>
        <a href=https://github.com/u1and0/locate-server/blob/master/README.md>https://github.com/u1and0/locate-server/blob/master/README.md</a><br>
      <br>
      </div>
      <!-- 折りたたみここまで -->

      <!-- Database status -->
      <div id="search-status">
        <b><a href=/status>DB</a> last update: {{ .lastUpdateTime }}</b><br>
      </div>

      <!-- Search result -->
      <div class="loader-wrap">
        <div class="loader">Loading...</div>
      </div>
      <table id="result">
      </table>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="/static/distributeResult.js"></script>
    <script type="text/javascript" src="/static/tooltips.js"></script>
    <script type="text/javascript" src="/static/datalist.js"></script>
  </body>
</html>


